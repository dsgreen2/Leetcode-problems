class Solution {
public:
bool f(int i,int j,set<pair<int,int>>&st){
    return st.find({i,j})!=st.end();
}
    vector<long long> countBlackBlocks(int m, int n, vector<vector<int>>& coordinates) {
        
    
    set<pair<int,int>> st;
     for(auto i:coordinates){
        st.insert({i[0],i[1]});
     }
        vector<long long> ans(5,0);
        for(int x=0;x<coordinates.size();x++){

            int i=coordinates[x][0];
            int j=coordinates[x][1];
            int four=0,three=0,two=0,one=0;
           // cout<<"i "<<i<<" j "<<j<<endl;

              //  cout<<"i "<<i<<"j "<<j<<endl;
               if(i-1>=0 && j-1>=0){
                    one=one+f(i-1,j-1,st)+f(i-1,j,st)+f(i,j,st)+f(i,j-1,st);
                    ans[one]++;
                }
                if(i-1>=0 && j+1<n){
                    two=two+f(i-1,j+1,st)+f(i-1,j,st)+f(i,j,st)+f(i,j+1,st);
                    ans[two]++;
                }
                if(i+1<m && j-1>=0){
                    three=three+f(i+1,j-1,st)+f(i,j-1,st)+f(i,j,st)+f(i+1,j,st);
                    ans[three]++;
                }
              
                if(i+1<m && j+1<n){
                    four=four+f(i+1,j+1,st)+f(i+1,j,st)+f(i,j,st)+f(i,j+1,st);
                   // cout<<"i "<<i<<" j "<<j<<" four "<<four<<endl;
                    ans[four]++;
                }

        }
        int sum=0;
        for(int i=1;i<5;i++){
            ans[i]=ans[i]/i;
            sum+=ans[i];
        }
        ans[0]=(long long)(m-1)*(n-1)-sum;

        return ans;
        
    }
};
