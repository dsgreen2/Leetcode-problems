class Solution {
public:

static bool sortcol(const vector<int>&v1,const vector<int>&v2){
    return v1[1]<v2[1];
}
    
    int findLongestChain(vector<vector<int>>& pairs) {

        int n=pairs.size();
        sort(pairs.begin(),pairs.end(),sortcol);
        vector<vector<int>>dp(n+1,vector<int>(n+1,0));
        for(int i=0;i<=n;i++)dp[n][i]=1;
        for(int i=n;i>=0;i--){
            for(int j=i-1;j>=0;j--){

                if(i<n){

                int nottake=0,take=0;

                nottake=dp[i+1][j];
                if(i==0 || pairs[j][1]<pairs[i][0]){
                    take=1+dp[i+1][i];
                }
               
                dp[i][j]=max(nottake,take);

                }
            }
        }
/*
        for(int i=0;i<dp.size();i++){
            for(int j=0;j<dp[0].size();j++){
                cout<<dp[i][j]<<" ";
            }
            cout<<endl;
        }
        */
        return dp[1][0];
        

    }
};
