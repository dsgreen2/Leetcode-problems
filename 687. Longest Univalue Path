class Solution {
public:
int f(TreeNode*root,int&ans){

    if(root->left==NULL && root->right==NULL){
        return 1;
    }

    int toret=1;
    int lp=0,rp=0;
    int currans=1;
    if(root->left){
        lp=f(root->left,ans);

        if(root->left->val==root->val){
            currans+=lp;
            toret+=lp;
        }


    }
    if(root->right){
       rp=f(root->right,ans);
       if(root->right->val==root->val){
           currans+=rp;
           toret=max(toret,1+rp);
       }
    }
    
 //   cout<<"root value "<<root->val<<" "<<" currans : "<<currans<<endl;
    if(currans>ans) ans=currans;
    /*
    cout<<"ans "<<ans<<endl;
    cout<<"toret "<<toret<<endl;
    */
    return toret;
   
}
    int longestUnivaluePath(TreeNode* root) {
        if(root==NULL) return 0;
        int ans=1;
        f(root,ans);
        return ans-1;
        
    }
};
